<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.believesun.mybatis.mapper.TeacherMapper">

    <insert id="insertByForEach">
        insert into t_teacher values
        <foreach collection="teachers" separator="," item="teacher">
            (#{teacher.id},
            #{teacher.name},
            #{teacher.age},
            #{teacher.height},
            #{teacher.birth},
            #{teacher.sex})
        </foreach>
    </insert>

    <delete id="deleteByForEach">
        delete from t_teacher
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="selectByChoose" resultType="teacher">
        select * from t_teacher
        <where>
            <choose>
                <when test="age != null and age != '' ">
                    age = #{age}
                </when>
                <when test="sex != null and sex != '' ">
                    sex = #{sex}
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </where>
    </select>
    <update id="updateTeacher" parameterType="teacher">
        update t_teacher
        <set>
            <if test="name != null and name != '' ">name = #{name},</if>
            <if test="age != null and age != '' ">age = #{age},</if>
            <if test="height != null and height != '' ">height = #{height},</if>
            <if test="birth != null">birth = #{birth},</if>
            <if test="sex != null and sex != '' ">sex = #{sex},</if>
        </set>
        <trim prefix="where" suffixOverrides="and | or">
            id = #{id}
        </trim>
    </update>

    <select id="selectByMultiConditionWithTrim" resultType="teacher">
        select * from t_teacher
        <!--
            prefix：加前缀
            prefixOverrides：删除前缀
            suffix：加后缀
            suffixOverrides：删除后缀


        -->
            <!--
                我们的where不是对第一个前缀支持自动补全，但是对全部的前缀不行，而且对于后缀也没有办法吗
                所以我们使用prefix在Trim标签所有内容的前面加前缀where ,前缀是只针对第一个的。
                使用suffixOverrides把trim标签内容中的后缀and或or删除掉
            -->
        <trim prefix="where" suffixOverrides="and | or">
            <if test="age != null and age != '' ">
                age = #{age} and
            </if>
            <if test="height != null and age != '' ">
                height >= #{height} and
            </if>
            <if test="sex != null and sex != '' ">
                sex = #{sex} or
            </if>
        </trim>
    </select>
    <select id="selectByMultiConditionWithWhere" resultType="teacher">
        select * from t_teacher
        <!--where标签专门负责Where字句的-->
        <!--
            使用Where标签时，第一个if就不需要加入and，where标签可以自动补全
            很tm智能
            去不了后面的and
            age = #{age} and  ===> Error
        -->
        <where>
            <if test="age != null and age != '' ">
                age = #{age} and
            </if>
            <if test="height != null and age != '' ">
                and height >= #{height}
            </if>
            <if test="sex != null and sex != '' ">
                and sex = #{sex}
            </if>
        </where>
    </select>
    <select id="selectByMultiCondition" resultType="teacher">
        <!--为了避免后面的if都不成立，会导致sql语句变成 select * from t_teacher where 会导致sql语句报错，所以我们在where后面加入个1 = 1-->
        select * from t_teacher where 1 = 1
        <!--
            if标签中test属性是必须的
                1.test的值使boolean类型
                2.为true时，就会将标签内的元素插入到sql语句中，反之则不可
                3.test属性中可以使用什么？
                    当使用了@Param注解，test中需要出现Param注解指定的参数名。@Param("sex") Character sex这里只能用sex
                    如果没用，则用arg0...param1....
                    当使用POJO，则填写POJO的属性名。
                4.在Mybatis的动态SQL中，不能用&&，只能用and

        <if test="age != null and age != ''">
            age like "%"#{age}"%"
        </if>
        -->
        <if test="age != null and age != '' ">
            and age = #{age}
        </if>
        <if test="height != null and age != '' ">
            and height >= #{height}
        </if>
        <if test="sex != null and sex != '' ">
            and sex = #{sex}
        </if>
    </select>
</mapper>